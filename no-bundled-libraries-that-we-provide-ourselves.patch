--- src/CMakeLists.txt
+++ src/CMakeLists.txt
@@ -50,16 +50,7 @@ if(NOT SQLITE3_FOUND)
 endif()
 
 ## glad ##
-execute_process(
-	COMMAND git submodule update --init src/glad
-	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
-)
-set(GLAD_PROFILE "compatibility" CACHE STRING "GL Profile" FORCE) # Using OpenGL Compatibility profile (for enabling use of fixed-function pipeline)
-set(GLAD_API "gl=3.2,gles2=2.0" CACHE STRING "GL versions" FORCE) # Build for OpenGL 3.0 and OpenGLES 2
-set(GLAD_EXTENSIONS "GL_EXT_texture_compression_s3tc,GL_OES_element_index_uint" CACHE STRING "Gl exts" FORCE) # S3TC used to load texture for pins â€” delete when removing support. The other is used by GLES2.
-set(GLAD_NO_LOADER ON CACHE BOOL "Disable loader" FORCE) # We're using SDL2 loader
-set(GLAD_REPRODUCIBLE ON CACHE BOOL "Reproducible build" FORCE)
-add_subdirectory(glad)
+find_package(glad REQUIRED)
 
 ## SDL2 ##
 find_package(SDL2 REQUIRED CONFIG)
@@ -104,10 +95,6 @@ string(REPLACE "OpenGL/gl.h" "glad/glad.h" input "${input}")
 string(REPLACE "GL/gl.h" "glad/glad.h" input "${input}")
 file(WRITE "${CMAKE_CURRENT_SOURCE_DIR}/imgui/backends/imgui_impl_opengl2.cpp" "${input}")
 
-include_directories(${CMAKE_CURRENT_SOURCE_DIR}/imgui
-	${GLAD_INCLUDE_DIRS}
-)
-
 set(SOURCES
 	imgui/imgui.cpp
 	imgui/imgui_draw.cpp
@@ -130,7 +117,7 @@ endif()
 
 add_library(imgui STATIC ${SOURCES})
 target_link_libraries(imgui
-	${GLAD_LIBRARIES}
+	glad::glad
 )
 if(MINGW)
 target_link_libraries(imgui
